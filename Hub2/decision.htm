<!--This Website is to help all the students learning C programming-->
<!DOCTYPE html>
<html>
<head>
<title> Decision Control</title>
</head>
<body>
<h1 style="text-align:center">Decision Control Statements</h1>
<h2><u>4.1 if statement</u></h2>
<p> It is used to execute an instruction or sequence / block of instruction only if condition is fulfilled. 
if statement, expression is evaluated first and then depending on whether the value of the expression (relation or condition) is true or fals,
transfers the control to the particular statement or group of statements.</p>
<h4><u>Different forms of implementation of if-statement are:</u></h4>
<ul>
	<li>Simple if statement</li>
	<li>if-else statement</li>
	<li>Nested if-else statement</li>
	<li>Else if statement</li>
</ul>
<h4><u>Simple if statement</u></h4>
<p> This is used to executed the statements only if the condition is <b>true.</b></p>
<h4><u>Syntax</u></h4>
<pre>
<table style="border:2px solid green"><tr><td>
	if(condition)
	{
		block of statement;
	}
</tr></td></table></pre>
<h4><u>Example</u></h4>
<pre>
#<b style="color:magenta">include</b>< stdio.h >
<b style="color:magenta">int</b> main()
{
	int number = 0;
	printf("\Enter an integer : ");
	scanf("%d",&number);

	if (number > 10)
	{
		printf(<b style="color:green">"\nYou entered %d which is greater than 10"</b>,number);
	}
	if (number < 10)
	{
		printf(<b style="color:green">"\nYou entered %d which is less than 10\n"</b>,number);
	}
	return 0;
}
</pre>
<h2><u>4.2 if-else statement</u></h2>
<p> if..else statement is used when different block of statement is to be executed on condition true and false.</p>
<h4><u>Synstax:</u></h4>
<pre>
	if(condition)
	{
	   block 1 of statement;
	}
	else
	{
	   block 2 of statement;
	}
</pre>
<p> if condition is true then block 1 statement will be executed and if condition is false block 2 statement will execute.</p>
<h4><u>Example</u></h4>
<pre>
#include < stdio.h >
int main()
{
	int number = 0;
	printf(\nEnter an integer : ");
	scanf("%d",&number);

	if (number > 10)
	{
		printf("\nYou entered %d which is greater than 10\n",number);
	}
	else
	{
		printf("\nYou entered % which is less than 10\n",number);
	}
	return 0;
}
</pre>
<h4><u>Output:</u></h4>
<pre>
	Enter an integer: 8
	You entered 8 which is less than 10
</pre>
<h2><u>4.3 else if statement</u></h2>
<p>To show a multi-way decision based on several conditions, we use the else if statement.</p>
<h4><u>Syntax:</u></h4>
<pre>
	if(condition_1)
	{
		block 1 statement;
	}
	else if (condition_2)
	{
		block 2 statement;
	}
	else if (condition_n)
	{
		block n statement;
	}
	else
	{
		block x statement;
	}
</pre>
<p>here, the conditions are evaluated in order from top to bottom. As soon as any condition evaluates to true, 
then statement associated with the given condition is executed and if all condition are false, then control is transferred to statement_x skipping the rest of the condition.
</p>
<h4><u>Example:</u></h4>
<pre>
#include < stdio.h >
int main()
{
	int mark;
	printf("Enter the total marks of student : ");
	scanf("%d",&mark);
	
	if(mark <= 50)
	{
		printf("\nGrade D");
	}
	else if (mark <= 60)
	{
		printf("\nGrade C");
	}
	else if (mark <=70)
	{
		printf("\nGrade B");
	}
	else
	{
		printf("\nGrade A);
	}
	return 0;
}
</pre>
<h4><u>Output:</u></h4>
<pre>
	Enter total marks of student: 80
	Grade A
</pre>
<h2><u>4.4 Nested if-else statement</u></h2>
<p>You can combine multiple if / if-else / if-else-if ladders when a series of decisions  are involved. So you can make sure that your program executes
certain instructions when a series of conditions are met.</p>
<h4><u>Some use case</u></h4>
<pre>
1.
	if(condition)
	{
		//block of statemnt
		if(condition)
		{
			//block of statement
		}
	}
</pre>
<pre>
2.
	if (condition)
	{
		//block of statement
	}
	else
	{
		if(condition)
		{
			//block of statement
		}
		else
		{
			//block of statement
		}
	}
</pre>
<pre>
3. 
	if(condition)
	{
		//block of statement
	}
	else if(condition)
	{
		if(condition)
		{
			//block of statement
		}
		else
		{
			//block of statement
		}
	}
</pre>
<h4><u>Example:</u></h4>
<pre>
#include < stdio. h >
int main()
{
	int numb1, numb2;
	printf("Enter two integers : ");
	scanf("%d %d",&numb1,numb2);
	//checking whether two integers are equal.

	if(numb1 == numb2)
	{
		printf("\nResult : %d = %d",numb1,numb2);
	}
	else
	{
		//checking whether numb1 i greater than numb2.
		if(numb1>numb2)
		{
			printf("\nResult : %d > %d",numb1,numb2);
		}
	}
	return 0;
}
</pre>
<h4><u>Output:</u></h4>
<pre>
	Enter two integers: 7 9
	Result: 9 > 7
</pre>
<h2><u>4.5 switch</u></h2>
<p>switch statements are also used when we need our program to make a certain decision based on a condition and then execute accordingly.</p>
<h4><u>Syntax:</u></h4>
<pre>
switch (<variable>)
{
	case a-constant-expression:
	//Code to execute if <variable> == a-constant-expression
	break:

	case b-constant-expression
	//Code to execute if <variable> == b-constant-expression
	break;
	.
	.
	.
	case n-constant-expression
	//Code to execute if <variable> == n-constant-expression
	break;
	
	default:
		//Code to execute if <variable> does not equal the value following any of the cases
}
</pre>
<p>(We will learn about <u>break</u> keyword in Loop section)</p>
<h4><u>Example</u></h4>
<table style="border:2px solid green"><tr><td><a href="HomePage.htm">Home</a></td></tr></table>				
</body>
</html>