<!--This Website is to help all the students learning C programming-->
<!DOCTYPE html>
<html>
<head>
<title> Variables & Constants</title>
</head>
<body>
<h1 style="text-align:center">Variables and Constants </h1>
<h2><u>2.1 Variables</u></h2>
<h4><u>Local Variables</u></h4>
<ul>
	<li>Local Variable is Variable having Local Scope.</li>
	<li>Local Variable is accessible only from function or block in which it is declared.</li>
	<li>Local Variable is given Higher Priority than the Global Variable.</li>
</ul>
<h4><u>Global Variables</u></h4>
<ul>
	<li>Global Variable is Variable that is available.</li>
	<li>Scope of Global variable is throughout the program [i.e in all functions including main()]</li>
	<li>Global variable is also visible inside function, provided that it should not be re-declared with same name inside function because "High Priority is given to Local Variable then Global".</li>
	<li>Global variable can be accessed from any function.</li>
</ul>
<h2><u>2.2 Rules for Variable Name</u></h2>
<ol>
	<li>Characters allowed:Underscore(_), Capital Letters(A-Z), Small Letters (a-z) and Digits (0-9).</li>
	<li>Blank spaces and commas are not allowed.</li>
	<li>No Special Symbols other than underscore(_) are allowed.</li>
	<li>First Character should be alphabet or Underscore.</li>
	<li>Variable name should not be Reserved Keywords.</li>
</ol>
<h2><u>2.3 Keywords</u></h2>
<p> Keywords are reserved words which have standard, predefined meaning in C. They cannot be used as program-defined identifiers</p>
<p><b><u>Note:</u> Generally all keywords are in lower case although uppercase of same names can be used as identifiers.</b></p>
<img src="https://petrusbuam.github.io/Hub2/Keywords.JPG"/>
<h2><u>2.4 Data Types</u></h2>
<ul>
	<li>Data Types are used for declaring variables and functions of different types.</li>
	<li>When Program store data in variables, It is necessary that each variable must be assigned a specific data type.</li>
</ul>
<p>Following are list of Data Types in C:</p>
<img src="Datatypes.png"/>
<h4><u>Declaration of variable:</u></h4>
<pre style="font-size:110%">
main()
   {
	/*declarartion */
	//long int is datatype and amount is variable name.
	<b style="color:magenta">long int</b> amount;
	//int is datatype and code is variable name
	<b style="color:magenta">int</b> code;
	<b style="color:magenta">char</b> c;
	<b style="color:magenta">double</b> average;
	<b style="color:magenta">float</b> x, y;
   }
</pre>
<h2><u>2.5 Constants</u></h2>
<p>A constant is an identifier with an associated value which cannot be altered by the program during execution.</p>
<h4><u>How to declare constant variable?</u></h4>
<p>We can declare constant variable using <b>const</b> keyword.</p>
<table style="border:2px solid black">
	<tr> <td>Example of declaring constant variable</td></tr>
</table>
<pre>
	//Syntax for declaring constant variable
	data type <b style="color:magenta">const</b> variable_name = <b style="color:magenta">value</b>;
	
	//float constant
	<b style="color:magenta"> float const</b> pi= <b style="color:green">3.14</b>;
	
	//integer constant
	<b style="color:magenta">int const</b> a = <b style="color:green">5</b>;
	
	//character constant
	<b style="color:magenta">char const</b> yes = <b style="color:green">'y'</b>;
</pre>
<h2><u>2.6 Symbolic Constants</u></h2>
<p>Symbolic Constant is a name that substitutes for a sequence of a characters or a numeric constant, a character constant or a string constant.</p>
<h4><u>The syntax is as follow:</u></h4>
<pre>
	#<b style="color:magenta">define</b> name text
Where,
<b>name</b> implies symbolic name in a caps
<b>text</b> implies value or the text. 
</pre>
<table style="border:2px solid black">
	<tr> <td>For Example:</td></tr>
</table>
<pre>
#<b style="color:magenta">define</b> printf print
#<b style="color:magenta">define</b> MAX 100
#<b style="color:magenta">define</b> TRUE 1
#<b style="color:magenta">define</b> FALSE 0
#<b style="color:magenta">define</b> SIZE 0
</pre>
<p> The <b>#</b> character is used for preprocessor commands. A <b>preprocessor</b> is a system program, which comes into action prior to Compiler, and it replaces the replacement text by the actual text. 
This will allow correct use of the statement printf</p>
<table style="border:2px solid green"><tr><td><a href="HomePage.htm">Home</a></td></tr></table>
</body>
</html>
